version: '3.7'

# after first initial build some django doesnt work
# you need to stop containers and run again , so django will work then
services:

  web:

    build: .
    command: >
      sh -c "cp bakerydemo/settings/local.py.example bakerydemo/settings/local.py &&
             echo "DJANGO_SETTINGS_MODULE=bakerydemo.settings.local" > .env &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    #command: gunicorn crud_project.wsgi -b 0.0.0.0:8000
    #command: echo "yes" | python manage.py flush &&
    #command: python manage.py loaddata dumpdata/db.json &&
    #command: python manage.py load_initial_data &&

    environment:
      - ENVIRONMENT=development
      # double dollar sign is used here to escape error (one sign is originally)
      - SECRET_KEY=8xfjiv8fcla7_((4xiyhuuboes8875-mi3v(np+++g73x9m$$66
      - DATABASE_NAME=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DEBUG=1

    # A new folder ./code/ will be created in the root dir of
    # container and
    # All code changed in directory /code/ inside container
    # will be sync with out host folder . (local) where this file sits
    # and vice versa
    volumes:

      - .:/code

    ports:
      - 8000:8000

    depends_on:
      - db

  db:
    image: postgres:11

    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "db"
      POSTGRES_PASSWORD: "postgres"

    # this means new volume (books_)?????????postgres_data will be created
    # in our host /var/lib/docker/volumes
    # and this folder/volume will be populated with data from
    # container's folder /var/lib/postgresql/data/
    volumes:
      - postgres_data:/var/lib/postgresql/data/


volumes:

  postgres_data:
